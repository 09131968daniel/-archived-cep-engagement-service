server.port=9020

spring.application.name=register-user

eureka.client.service-url.defaultZone=http://${EUREKA_HOSTED_IP:127.0.0.1}:9999/eureka
eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true

eureka.instance.instance-id=${spring.application.name}:${random.value}

#SQL dialect makes hibernate generate sql for the chosen database.
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

#the below is the H2 configuration and some other s
#changing testdeb to 
spring.datasource.url=jdbc:h2:mem:testdb;MODE=PostgreSQL
spring.datasource.driver-class-name=org.h2.Driver
#spring.datasource.data=classpath:data.sql
spring.h2.console.enabled=true

#changed from sa to user
spring.datasource.username=sa
spring.datasource.password=
#
spring.jpa.generate-ddl=true
##If use create-drop, then CONSTRAINTS GET DROPPED FIRST.
##May throw if constraints are not there.
spring.jpa.hibernate.ddl-auto=create

#Env variable for all email route validation
key.allemail = SecretEmailKey
